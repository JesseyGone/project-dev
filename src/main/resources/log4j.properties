#********************************************************************
#        LOG4J配置
#********************************************************************
#
# 使用log4j要先引入依赖，然后排除掉SpringBoot默认的log
# 多环境配置只需配置log4j.category.ind.lgh引用的配置即可
log4j.rootCategory=INFO, stdout
#按package进行日志输出
log4j.category.ind.lgh=${logging.level.ind.lgh}
# 控制台输出
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n

# 日志持久化
#log4j.rootCategory=INFO, stdout, file, errorfile
##按package进行日志输出
#log4j.category.ind.lgh=${logging.level.ind.lgh}, devfile
#log4j.logger.error=errorfile
#
## root日志输出
#log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.file.file=logs/all.log
#log4j.appender.file.DatePattern='.'yyyy-MM-dd
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
#
## error日志输出
#log4j.appender.errorfile=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.errorfile.file=logs/error.log
#log4j.appender.errorfile.DatePattern='.'yyyy-MM-dd
#log4j.appender.errorfile.Threshold = ERROR
#log4j.appender.errorfile.layout=org.apache.log4j.PatternLayout
#log4j.appender.errorfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
#
## ind.lgh下的日志输出
#log4j.appender.devfile=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.devfile.file=logs/my.log
#log4j.appender.devfile.DatePattern='.'yyyy-MM-dd
#log4j.appender.devfile.layout=org.apache.log4j.PatternLayout
#log4j.appender.devfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n


# **备份**
# SpringBoot默认配置
## SpringBoot默认log配置使用Commons Logging
## SpringBoot默认只会输出到控制台，并不会记录文件
## 配置持久化日志
##logging.path=E:\\tmp\\log
##logging.file=spring.log #by default - spring.log
## 配置输出级别
#logging.level.ind.lgh=DEBUG
#logging.level.org.springframework.web=INFO
#logging.level.org.hibernate=ERROR
#logging.level.*=DEBUG
## 日志文件会在10Mb大小时被截断，产生新的日志
#spring.output.ansi.enabled=DETECT
#logging.pattern.console="%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
#logging.pattern.file="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"