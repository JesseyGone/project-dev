#********************************************************************
#        开发环境
#********************************************************************
#
#=====================log============================================
logging.level.ind.lgh=INFO
#=====================tomcat=========================================
server.port=8888
server.tomcat.uri-encoding=UTF-8
server.tomcat.max-threads=800
#=====================aop============================================
# Add @EnableAspectJAutoProxy. by default
spring.aop.auto=true
# Whether subclass-based (CGLIB) proxies are to be created (true) as opposed to standard Java interface-based proxies (false).
spring.aop.proxy-target-class=true
#=====================HTTP encoding==================================
# the encoding of HTTP requests/responses
spring.http.encoding.charset=UTF-8
# enable http encoding support
spring.http.encoding.enabled=true
# force the configured encoding
spring.http.encoding.force=true
#=====================mysql==========================================
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/sys_db?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&autoReconnect=true&zeroDateTimeBehavior=convertToNull
spring.datasource.username=root
spring.datasource.password=root
#spring.datasource.initialize=true#by default-启用数据库初始化
#spring.datasource.schema=schema.sql#DDL-by default-在根目录下放建表语句
#spring.datasource.data=data.sql#DML-by default-在根目录下放插入语句
#spring.datasource.continue-on-error=true#这个配置允许在执行sql出错时继续启动程序而不是fail to start
#=====================druid==========================================
spring.datasource.name=druid
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.druid.useGlobalDataSourceStat=true
#=====================mybatis==========================================
mybatis.mapperLocations=classpath:mapper/*.xml
mybatis.typeAliasesPackage=ind.lgh.system.mapper
#mybatis.config=mybatis-config.xml配置文件的路径
#mybatis.typeHandlersPackage=扫描typeHandlers的包
#mybatis.checkConfigLocation=检查配置文件是否存在
#mybatis.executorType=设置执行模式（SIMPLE, REUSE, BATCH），默认为SIMPLE
#=====================mybatis-mapper===================================
#mappers 多个接口时逗号隔开
mapper.mappers=ind.lgh.system.utils.BaseMapper
mapper.not-empty=false
mapper.identity=MYSQL
#=====================mybatis-pagehelper===============================
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql